// Code generated by protoc-gen-go. DO NOT EDIT.
// source: oauth.proto

package rest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Generic Query for limiting results based on resource permissions
type OAuthConfigurationRequest struct {
}

func (m *OAuthConfigurationRequest) Reset()                    { *m = OAuthConfigurationRequest{} }
func (m *OAuthConfigurationRequest) String() string            { return proto.CompactTextString(m) }
func (*OAuthConfigurationRequest) ProtoMessage()               {}
func (*OAuthConfigurationRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

type OAuthConfigurationResponse struct {
	Issuer                            string   `protobuf:"bytes,1,opt,name=issuer" json:"issuer,omitempty"`
	AuthorizationEndpoint             string   `protobuf:"bytes,2,opt,name=authorization_endpoint,json=authorizationEndpoint" json:"authorization_endpoint,omitempty"`
	TokenEndpoint                     string   `protobuf:"bytes,3,opt,name=token_endpoint,json=tokenEndpoint" json:"token_endpoint,omitempty"`
	JwksUri                           string   `protobuf:"bytes,4,opt,name=jwks_uri,json=jwksUri" json:"jwks_uri,omitempty"`
	ResponseTypesSupported            []string `protobuf:"bytes,5,rep,name=response_types_supported,json=responseTypesSupported" json:"response_types_supported,omitempty"`
	SubjectTypesSupported             []string `protobuf:"bytes,6,rep,name=subject_types_supported,json=subjectTypesSupported" json:"subject_types_supported,omitempty"`
	IdTokenSigningAlgValuesSupported  []string `protobuf:"bytes,7,rep,name=id_token_signing_alg_values_supported,json=idTokenSigningAlgValuesSupported" json:"id_token_signing_alg_values_supported,omitempty"`
	ScopesSupported                   []string `protobuf:"bytes,8,rep,name=scopes_supported,json=scopesSupported" json:"scopes_supported,omitempty"`
	TokenEndpointAuthMethodsSupported []string `protobuf:"bytes,9,rep,name=token_endpoint_auth_methods_supported,json=tokenEndpointAuthMethodsSupported" json:"token_endpoint_auth_methods_supported,omitempty"`
	ClaimsSupported                   []string `protobuf:"bytes,10,rep,name=claims_supported,json=claimsSupported" json:"claims_supported,omitempty"`
}

func (m *OAuthConfigurationResponse) Reset()                    { *m = OAuthConfigurationResponse{} }
func (m *OAuthConfigurationResponse) String() string            { return proto.CompactTextString(m) }
func (*OAuthConfigurationResponse) ProtoMessage()               {}
func (*OAuthConfigurationResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *OAuthConfigurationResponse) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *OAuthConfigurationResponse) GetAuthorizationEndpoint() string {
	if m != nil {
		return m.AuthorizationEndpoint
	}
	return ""
}

func (m *OAuthConfigurationResponse) GetTokenEndpoint() string {
	if m != nil {
		return m.TokenEndpoint
	}
	return ""
}

func (m *OAuthConfigurationResponse) GetJwksUri() string {
	if m != nil {
		return m.JwksUri
	}
	return ""
}

func (m *OAuthConfigurationResponse) GetResponseTypesSupported() []string {
	if m != nil {
		return m.ResponseTypesSupported
	}
	return nil
}

func (m *OAuthConfigurationResponse) GetSubjectTypesSupported() []string {
	if m != nil {
		return m.SubjectTypesSupported
	}
	return nil
}

func (m *OAuthConfigurationResponse) GetIdTokenSigningAlgValuesSupported() []string {
	if m != nil {
		return m.IdTokenSigningAlgValuesSupported
	}
	return nil
}

func (m *OAuthConfigurationResponse) GetScopesSupported() []string {
	if m != nil {
		return m.ScopesSupported
	}
	return nil
}

func (m *OAuthConfigurationResponse) GetTokenEndpointAuthMethodsSupported() []string {
	if m != nil {
		return m.TokenEndpointAuthMethodsSupported
	}
	return nil
}

func (m *OAuthConfigurationResponse) GetClaimsSupported() []string {
	if m != nil {
		return m.ClaimsSupported
	}
	return nil
}

func init() {
	proto.RegisterType((*OAuthConfigurationRequest)(nil), "rest.OAuthConfigurationRequest")
	proto.RegisterType((*OAuthConfigurationResponse)(nil), "rest.OAuthConfigurationResponse")
}

func init() { proto.RegisterFile("oauth.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4d, 0x4f, 0xf2, 0x40,
	0x10, 0xc7, 0xc3, 0x03, 0x0f, 0x2f, 0x63, 0x7c, 0x49, 0x13, 0xb0, 0xe8, 0x05, 0x4d, 0x48, 0xf0,
	0xe2, 0xc5, 0x68, 0xbc, 0x12, 0xe3, 0xd1, 0x60, 0x00, 0xbd, 0x6e, 0x0a, 0x5d, 0xcb, 0x40, 0xd9,
	0xa9, 0xfb, 0xa2, 0xd1, 0x4f, 0xe2, 0xc7, 0x35, 0xbb, 0x2d, 0xd0, 0x55, 0x8f, 0x3b, 0xff, 0xdf,
	0x6f, 0x66, 0x32, 0x2d, 0xec, 0x51, 0x64, 0xf4, 0xe2, 0x32, 0x93, 0xa4, 0x29, 0xa8, 0x49, 0xae,
	0xf4, 0xf9, 0x29, 0x74, 0x47, 0x43, 0xa3, 0x17, 0x77, 0x24, 0x5e, 0x30, 0x31, 0x32, 0xd2, 0x48,
	0x62, 0xcc, 0x5f, 0x8d, 0x0d, 0xbf, 0x6a, 0x70, 0xf2, 0x57, 0xaa, 0x32, 0x12, 0x8a, 0x07, 0x1d,
	0xa8, 0xa3, 0x52, 0x86, 0xcb, 0xb0, 0xd2, 0xab, 0x0c, 0x5a, 0xe3, 0xe2, 0x15, 0x5c, 0x43, 0xc7,
	0xce, 0x21, 0x89, 0x9f, 0x4e, 0x60, 0x5c, 0xc4, 0x19, 0xa1, 0xd0, 0xe1, 0x3f, 0xc7, 0xb5, 0xbd,
	0xf4, 0xbe, 0x08, 0x83, 0x3e, 0x1c, 0x68, 0x5a, 0xf1, 0x12, 0x5e, 0x75, 0xf8, 0xbe, 0xab, 0x6e,
	0xb1, 0x2e, 0x34, 0x97, 0xef, 0x2b, 0xc5, 0x8c, 0xc4, 0xb0, 0xe6, 0x80, 0x86, 0x7d, 0x3f, 0x49,
	0x0c, 0x6e, 0x21, 0x94, 0xc5, 0x72, 0x4c, 0x7f, 0x64, 0x5c, 0x31, 0x65, 0xb2, 0x8c, 0xa4, 0xe6,
	0x71, 0xf8, 0xbf, 0x57, 0x1d, 0xb4, 0xc6, 0x9d, 0x4d, 0x3e, 0xb5, 0xf1, 0x64, 0x93, 0x06, 0x37,
	0x70, 0xac, 0xcc, 0x6c, 0xc9, 0xe7, 0xfa, 0x97, 0x58, 0x77, 0x62, 0xbb, 0x88, 0x7f, 0x78, 0x23,
	0xe8, 0x63, 0xcc, 0xf2, 0xb5, 0x15, 0x26, 0x02, 0x45, 0xc2, 0xa2, 0x34, 0x61, 0x6f, 0x51, 0x6a,
	0xbc, 0x2e, 0x0d, 0xd7, 0xa5, 0x87, 0xf1, 0xd4, 0xb2, 0x93, 0x1c, 0x1d, 0xa6, 0xc9, 0xb3, 0x03,
	0x77, 0x0d, 0x2f, 0xe0, 0x48, 0xcd, 0xc9, 0xdf, 0xa0, 0xe9, 0xdc, 0xc3, 0xbc, 0xbe, 0x43, 0x1f,
	0xa1, 0xef, 0xdf, 0x8b, 0xd9, 0xbb, 0xb2, 0x35, 0xd7, 0x0b, 0x8a, 0xcb, 0x7e, 0xcb, 0xf9, 0x67,
	0xde, 0x19, 0xed, 0x57, 0x7d, 0xc8, 0x49, 0x6f, 0xf8, 0x3c, 0x8d, 0x70, 0x5d, 0x96, 0x21, 0x1f,
	0x9e, 0xd7, 0xb7, 0xe8, 0xac, 0xee, 0x7e, 0xa2, 0xab, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42,
	0x5c, 0x9b, 0x0e, 0x53, 0x02, 0x00, 0x00,
}
