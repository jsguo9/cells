// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ldap.proto

package auth

import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *LdapSearchFilter) Validate() error {
	return nil
}
func (this *LdapMapping) Validate() error {
	return nil
}
func (this *LdapMemberOfMapping) Validate() error {
	if this.Mapping != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Mapping); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Mapping", err)
		}
	}
	if this.GroupFilter != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.GroupFilter); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("GroupFilter", err)
		}
	}
	return nil
}
func (this *LdapServerConfig) Validate() error {
	if this.User != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.User); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("User", err)
		}
	}
	for _, item := range this.MappingRules {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("MappingRules", err)
			}
		}
	}
	if this.MemberOfMapping != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.MemberOfMapping); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("MemberOfMapping", err)
		}
	}
	return nil
}
